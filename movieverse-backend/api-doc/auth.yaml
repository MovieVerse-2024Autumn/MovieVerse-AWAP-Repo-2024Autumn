tags:
  - name: Authentication
    description: Endpoints for user registration, login, logout and account deletion.

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Allows new users to register by providing their email, password, first name, and last name.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
        "400":
          description: User already exists or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User already exists"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticates a user with their email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "jwt_token"
                  profileUrl:
                    type: string
                    example: "unique-profile-url"
                  firstName:
                    type: string
                    example: "John"
                  lastName:
                    type: string
                    example: "Doe"
                  message:
                    type: string
                    example: "Login successful"
        "400":
          description: Invalid email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password"

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Logs out the currently authenticated user by invalidating their JWT token.
      security:
        - Bearer: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful"
        "400":
          description: No token provided or invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No token provided"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /auth/delete:
    delete:
      tags:
        - Authentication
      summary: Delete user account
      description: Deletes the currently authenticated user's account. Requires a valid JWT token.
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRequest"
      responses:
        "200":
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Account deleted successfully"
        "400":
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid password"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "securePassword123"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "securePassword123"

    DeleteRequest:
      type: object
      properties:
        reason:
          type: string
          example: "No longer using the service"
        password:
          type: string
          example: "securePassword123"

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: "user@example.com"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        profileUrl:
          type: string
          example: "unique-profile-url"
